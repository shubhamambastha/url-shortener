tags:
- name: Admin
  description: Admin APIs
- name: User
  description: User APIs
- name: URL
  description: URL APIs

paths:
# [GET] users
  /users:
    get:
      tags:
      - Admin
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - Admin
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - Admin
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - Admin
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - Admin
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] signup
  /signup:
    post:
      tags:
      - User
      summary: Signup User
      parameters:
      - name: body
        in: body
        description: User Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] login
  /login:
    post:
      tags:
      - User
      summary: Login User
      parameters:
      - name: body
        in: body
        description: User Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'Success'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] logout
  /logout:
    post:
      tags:
      - User
      summary: Logout User
      responses:
        200:
          description: 'Logged Out'
        400:
          description: 'Bad Request'
        404:
          description: 'Token Missing'
        500:
          description: 'Server Error'

# [GET] urls
  /urls:
    get:
      tags:
      - URL
      summary: Find All URLs
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] urls
    post:
      tags:
      - URL
      summary: Add URL
      parameters:
      - name: body
        in: body
        description: url Data
        required: true
        schema:
          $ref: '#/definitions/urls'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] urls/id
    delete:
      tags:
      - URL
      summary: Delete URL By Id
      parameters:
      - name: id
        in: path
        description: url Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
  
  urls:
    type: object
    required:
        - longUrl
    properties:
      longUrl:
        type: string
        description: original url
      shortCode:
        type: string
        description: custom url

schemes:
 - https
 - http
